#!/usr/bin/ksh

export TGTDIR="<%= node[:clone12_2][:fs___ebs][:name] %>"
export STGBIN="<%= node[:clone12_2][:fs_stage][:bin] %>"

export VER=1.03;  # added chkuser. modified .profile contents


#-----------------------------------------------------
# Functions
#-----------------------------------------------------
#-----------------------------------------------------

function unpack_d01_CERT {
  echo
  if [ ! -d ${TGTDIR}/CERT ] ; then
    echo "\tInstalling the latest version of CERT into $TGTDIR ..."
    echo "(cd ${TGTDIR}; cat $STGBIN/Latest.CERT.tgz | gunzip | tar xpf - )"
          (cd ${TGTDIR}; cat $STGBIN/Latest.CERT.tgz | gunzip | tar xpf - )
    echo chown -R oracle:oinstall ${TGTDIR}/CERT
         chown -R oracle:oinstall ${TGTDIR}/CERT
  else
    echo "${TGTDIR}/CERT is already created. Bypassing untarring Latest.CERT.tgz"
  fi
  echo
}

export HOME_ORACLE=/home/oracle
function append_alias_to_profile {
  fgrep "APPENDED BY CERT INSTALL SCRIPTS" $HOME_ORACLE/.profile  > /dev/null
  if [ $? != 0 ] ; then
    if [ -f $HOME_ORACLE/.profile ] ; then
      echo "#    APPENDED BY CERT INSTALL SCRIPTS"                               >> $HOME_ORACLE/.profile
      echo "export HOMES=${TGTDIR}/CERT/homes"                                   >> $HOME_ORACLE/.profile
      echo "if [ -d \$HOMES ] ; then"                                            >> $HOME_ORACLE/.profile
      echo "  echo"                                                              >> $HOME_ORACLE/.profile
      echo "  echo 'Alias(v1.29): cert - to source into the CERT env.'"          >> $HOME_ORACLE/.profile
      echo "  echo"                                                              >> $HOME_ORACLE/.profile
      echo "  alias cert=\"echo Loading CERT Environmment; . \$HOMES/profile;\"" >> $HOME_ORACLE/.profile
      echo "fi"                                                                  >> $HOME_ORACLE/.profile
      echo ""                                                                    >> $HOME_ORACLE/.profile
    else
      echo "Error: Cannot find /home/oracle/.profile. Aborting"
      exit -5
    fi
  else
    echo "CERT already appended to .profile. bypassing..."
  fi
}

#
# A FUNCTION that returns TRUE if the CURRENT USER matches the AUTHORIZED USER
# passed in as the FIRST PARAMETER
#
function check_user
{
  #set -x
   # Unload the PARAMETERS into a more meaningful VARIABLE
   _authorized_user=$1

   if [[ ! `whoami` = $_authorized_user ]]; then
      printf "\nYou must be logged on as '%s' to create a RAMDISK\n\n" $_authorized_user
      return 1
   fi
   return 0
}

#-----------------------------------------------------
# Main
#-----------------------------------------------------
#-----------------------------------------------------

  # user running this must be oracle
check_user oracle
if [ ! -d "$TGTDIR" ] ; then echo "TGTDIR not valid. Aborting..."; exit -5; fi
if [ ! -d "$STGBIN" ] ; then echo "STGBIN not valid. Aborting..."; exit -5; fi

echo "Installing the latest version of CERT SCRIPTS into $TGTDIR ..."

unpack_d01_CERT
append_alias_to_profile

echo
echo COMPLETED

